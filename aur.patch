index 1a517ab..b32a744 100644
--- a/offline.py
+++ b/offline.py
@@ -288,19 +288,21 @@ if packages:
 
 
 aur_packages = []
-if archinstall.arguments.get('silent', None) is None:
-	if not aur_packages and (aur_packages := archinstall.arguments.get('aur-packages', None)) is None:
-		aur_packages = input('Enter any additional AUR packages to include aside from aur_packages.x86_64 (space separated): ').strip() or []
 
-if aur_packages and type(aur_packages) == str:
+if not (aur_packages := archinstall.arguments.get('aur-packages', None)):
+	aur_packages = input('Enter any additional packages to include aside from packages.x86_64 (space separated): ').strip() or []
+
+if aur_packages:
 	aur_packages = aur_packages.split(' ')
 
-	#archinstall.log(f"Validating additional packages...", level=logging.INFO)
-	#try:
-	#	archinstall.validate_aur_package_list(aur_packages)
-	#except archinstall.RequirementError as e:
-	#	archinstall.log(e, fg='red')
-	#	exit(1)
+	archinstall.log(f"Validating additional aur_packages...", level=logging.INFO)
+	try:
+		archinstall.validate_package_list(aur_packages)
+	except archinstall.RequirementError as e:
+		archinstall.log(e, fg='red')
+		exit(1)
+
+
 
 if archinstall.arguments.get('resources', None):
 	archinstall.log(f"Gathering resources", fg="yellow", level=logging.INFO)
@@ -390,8 +392,12 @@ if aur_packages:
 		# This regexp needs to accomodate multiple keys, as well as the logic below
 		gpgkeys = re.findall('validpgpkeys=\(.*\)', PKGBUILD)
 		if gpgkeys:
-			for key in gpgkeys:
-				key = key[13:].strip('(\')"')
+			keys=[]
+			for gpgkey in gpgkeys:
+				regexkeys = re.findall('[A-F0-9]{40}', gpgkey)
+				for regexkey in regexkeys:
+					keys.append(regexkey)
+			for key in keys:
 				archinstall.log(f"Adding GPG-key {key} to session for {sudo_user}")
 				archinstall.SysCommand(f"/usr/bin/sudo -H -u {sudo_user} /usr/bin/gpg --recv-keys {key}")


